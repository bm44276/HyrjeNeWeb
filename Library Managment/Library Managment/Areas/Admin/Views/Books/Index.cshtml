@using Library_Managment.Areas.Admin.Models;
@model PaginatedList<Library_Managment.Models.Book>

@{
    ViewData["Title"] = "Manage Books";
}
<br />
    <h1 style="font-family: 'Arvo', serif;" class="text-center mb-2">@ViewData["Title"]</h1>
    <br />
    <div class="row justify-content-between pb-2 mb-3">
        <div class="col-md-5">
            <p>
                <a class="btn btn-primary" asp-action="Create">Create New</a>
            </p>
        </div>
        <div class="col-md-4">
            <form asp-action="Index" method="get">
                <div class="form-inline ">
                    <p>
                        <input type="text" name="SearchString"  class="form-control" style="max-width:400px;" value="@ViewData["CurrentFilter"]" placeholder="Find Book" />
                        <input type="submit" value="Search" class="btn btn-success" /> -
                        <a class="btn btn-primary" asp-action="Index">Back to Full List</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
    <div class="dropdown">
        <button class="btn btn-info dropdown-toggle" type="button" data-toggle="dropdown">
            Sort Books
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name/ISBN</a></li>
            <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["Author"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Author</a></li>
            <li>
                <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["Date"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a>
            </li>
        </ul>
    </div>

<br />
<div class="container-fluid">
    @foreach(var item in Model) {
    <div class="row justify-content-around pt-2 pb-3 mb-5 mt-4 border-top">
        <div class="col-md-3">
            <img style="height:350px; width:255px;" src="~/BookImages/@item.Image" alt="Alternate Text" />
        </div>
        <div class="col-md-3">
            <h4>ISBN -  @Html.DisplayFor(modelItem => item.ISBN)</h4>
            <h4>Name -  @Html.DisplayFor(modelItem => item.Name)</h4>
            <h4>Author - @Html.DisplayFor(modelItem => item.Author)</h4>
            <h4>Genre - @Html.DisplayFor(modelItem => item.Genre)</h4>
            <h5>Amount - @Html.DisplayFor(modelItem => item.Amount)</h5>
            <h5>Available - @Html.DisplayFor(modelItem => item.Available)</h5>
            
        </div>
        <div class="col-md-3">
            <h4>Description:</h4>
            <textarea rows="10" cols="50" class="border p-2">@Html.DisplayFor(modelItem => item.Description)</textarea>
            <h5>Publish Date: @Html.DisplayFor(modelItem => item.PublishDate)</h5>
        </div>
        <div class="col-md-3">
            <h4>Manage Book</h4>
            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
            <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            @{
                if (item.Available != 0) {
                    <a class="btn btn-info" asp-action="GiveBook" asp-route-id="@item.Id">Give Book</a>
                } else {
        <label class="btn btn-secondary disabled" style="margin:2px;">Give Book</label>
                }

                if (item.Available != item.Amount) {
                    <a class="btn btn-info" asp-action="ReturnBook" asp-route-id="@item.Id" style="margin:2px;">Return Book</a>
                } else {
                    <label class="btn btn-secondary disabled" style="margin:2px;">Return Book</label>
                }
            }
        </div>
    </div>
    }
</div>

    <div class="modal" tabindex="-1" role="dialog" id="BookNotReturnedByUser">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Problem</h5>
                  
                </div>
                <div class="modal-body">
                    <p>User has not returned previous book yet.</p>
                    <p>Click anywhere outside the box to close it</p>
                </div>
                
            </div>
        </div>
    </div>

    <script>
        var url_string = window.location.href;
        var url = new URL(url_string);
        var returned = url.searchParams.get("returned");
        console.log(returned);
        var modal = document.getElementById('BookNotReturnedByUser');
        if (returned == 'False') {
            modal.style.display = "block";
        }



        var modal = document.getElementById('BookNotReturnedByUser');

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

   

    </script>


    <div class="container">
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-primary @prevDisabled">
            Previous
        </a>

        <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-primary @nextDisabled">
            Next
        </a>
        <br /><br /><br />
    </div>
