@using Library_Managment.Areas.Admin.Models;
@model PaginatedList<Library_Managment.Models.Book>

@{
    ViewData["Title"] = "Manage Books";
}
    <h1 class="text-center mb-2">@ViewData["Title"]</h1>
    <br />
    <div class="row justify-content-between pb-2 mb-3">
        <div class="col-md-5">
            <p>
                <a class="btn btn-primary" asp-action="Create">Create New</a>
            </p>
        </div>
        <div class="col-md-4">
            <form asp-action="Index" method="get">
                <div class="form-inline ">
                    <p>
                        <input type="text" name="SearchString"  class="form-control" style="max-width:400px;" value="@ViewData["CurrentFilter"]" placeholder="Find Book" />
                        <input type="submit" value="Search" class="btn btn-success" /> -
                        <a class="btn btn-primary" asp-action="Index">Back to Full List</a>
                    </p>
                </div>
            </form>
        </div>
    </div>

<br />
<div class="container-fluid">
    @foreach(var item in Model) {
    <div class="row justify-content-around pt-2 pb-3 mb-5 mt-4 border-top">
        <div class="col-md-3">
            <img style="height:350px; width:255px;" src="~/BookImages/@item.Image" alt="Alternate Text" />
        </div>
        <div class="col-md-3">
            <h4>ISBN -  @Html.DisplayFor(modelItem => item.ISBN)</h4>
            <h4>Name -  @Html.DisplayFor(modelItem => item.Name)</h4>
            <h4>Author - @Html.DisplayFor(modelItem => item.Author)</h4>
            <h4>Genre - @Html.DisplayFor(modelItem => item.Genre)</h4>
            <h5>Amount - @Html.DisplayFor(modelItem => item.Amount)</h5>
            <h5>Available - @Html.DisplayFor(modelItem => item.Available)</h5>
            
        </div>
        <div class="col-md-3">
            <h4>Description:</h4>
            <textarea rows="10" cols="50" class="border p-2">@Html.DisplayFor(modelItem => item.Description)</textarea>
            <h5>Publish Date: @Html.DisplayFor(modelItem => item.PublishDate)</h5>
        </div>
        <div class="col-md-3">
            <h3>Manage Book</h3>
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
        </div>
    </div>
    }
</div>

<div class="container">
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" 
       asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @prevDisabled"> Previous 
    </a>

    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @nextDisabled"> Next
    </a>

</div>
